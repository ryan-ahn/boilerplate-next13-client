{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "import",
    "newline"
  ],
  "parserOptions": {
    "project": "./tsconfig.json",
    "createDefaultProgram": true
  },
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "ignorePatterns": [
    "node_modules/"
  ],
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": {
    // 충돌 제거
    "consistent-return": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-no-useless-fragment": "off",
    "import/no-extraneous-dependencies": "off",
    "import/prefer-default-export": "off",
    "@typescript-eslint/no-shadow": "off",
    "@typescript-eslint/no-use-before-define": "off",
    // 탭 길이 설정
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "max-len": [
      "error",
      {
        "code": 500
      }
    ],
    // 세미 콜론
    "semi": [
      2,
      "always"
    ],
    "semi-style": [
      "error",
      "last"
    ],
    // 파일명 이슈 해결
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [
          ".js",
          ".ts",
          ".tsx"
        ]
      }
    ],
    // import 순서
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "parent",
          "sibling",
          "index"
        ],
        "pathGroups": [
          {
            "pattern": "@styles/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@store/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@hooks/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@utils/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@interface/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@containers/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@components/**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@constants/**",
            "group": "internal",
            "position": "after"
          }
        ]
      }
    ],
    // import 2개 이상시 줄바꿈 처리
    "newline/import-module": [
      "error",
      {
        "minItems": 2
      }
    ],
    // 객체 구조분해할당 프로퍼티 2개 이상시 줄바꿈 처리
    "newline/object-property": [
      "error",
      {
        "minItems": 2
      }
    ],
    // 배열이 2개 이상일시 시작 브라켓 줄바꿈
    "array-bracket-newline": [
      "error",
      {
        "minItems": 2
      }
    ],
    // 배열이 2개 이상일시 요소 줄바꿈
    "array-element-newline": [
      "error",
      {
        "minItems": 2
      }
    ],
    // 배열,객체,가져오기,내보내기 멀티라인일시 마지막에 콤마
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline"
      }
    ],
    // 구조분해할당, 가져오기, 내보내기 프로퍼티 2개 이상일시 멀티라인 적용
    "object-curly-newline": [
      "error",
      {
        "ObjectExpression": {
          "multiline": true,
          "minProperties": 1
        },
        "ObjectPattern": {
          "multiline": true,
          "minProperties": 2
        },
        "ImportDeclaration": {
          "multiline": true,
          "minProperties": 2
        },
        "ExportDeclaration": {
          "multiline": true,
          "minProperties": 2
        }
      }
    ],
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "MemberExpression": "off",
        "SwitchCase": 1,
        "flatTernaryExpressions": true
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "comma",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": true
        }
      }
    ]
  }
}